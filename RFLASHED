local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

local trackedPlayer = nil
local running = true

-- Function to highlight a player
local function highlightPlayer(targetPlayer)
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local highlight = Instance.new("SelectionBox")
        highlight.Adornee = targetPlayer.Character.HumanoidRootPart
        highlight.Name = "Highlight"
        highlight.Parent = targetPlayer.Character.HumanoidRootPart
        print("Highlighted player:", targetPlayer.Name)
    end
end

-- Function to unhighlight a player
local function unhighlightPlayer(targetPlayer)
    if targetPlayer and targetPlayer.Character and targetPlayer.Character.HumanoidRootPart:FindFirstChild("Highlight") then
        targetPlayer.Character.HumanoidRootPart.Highlight:Destroy()
        print("Unhighlighted player:", targetPlayer.Name)
    end
end

-- Function to track player in front
local function trackPlayerInFront()
    local character = player.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        local rootPart = character.HumanoidRootPart
        local ray = Ray.new(rootPart.Position, rootPart.CFrame.LookVector * 100)  -- Adjust the distance as needed
        local part, position = workspace:FindPartOnRay(ray, character)

        if part and part.Parent and Players:GetPlayerFromCharacter(part.Parent) then
            local targetPlayer = Players:GetPlayerFromCharacter(part.Parent)
            if targetPlayer ~= player and targetPlayer.Team ~= player.Team then
                return targetPlayer
            end
        end
    end
    return nil
end

-- Function to handle R key press
local function onRPressed()
    local targetPlayer = trackPlayerInFront()
    if targetPlayer then
        if trackedPlayer == targetPlayer then
            unhighlightPlayer(trackedPlayer)
            trackedPlayer = nil
        else
            if trackedPlayer then
                unhighlightPlayer(trackedPlayer)
            end
            trackedPlayer = targetPlayer
            highlightPlayer(trackedPlayer)
        end
    else
        print("No valid player in front.")
    end
end

-- Function to handle END key press
local function onEndPressed()
    running = false
    if trackedPlayer then
        unhighlightPlayer(trackedPlayer)
        trackedPlayer = nil
    end
    print("Panic mode activated, script disabled.")
end

-- Connect the R key press event
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == Enum.KeyCode.ButtonR1 and not gameProcessed then
        onRPressed()
    elseif input.KeyCode == Enum.KeyCode.End and not gameProcessed then
        onEndPressed()
    end
end)

-- Function to check and fire event if tracked player is blocking
local function checkAndFireEvent()
    if trackedPlayer then
        local playerIdFolder = ReplicatedStorage.PlayerDataStorage:FindFirstChild(tostring(trackedPlayer.UserId))
        if playerIdFolder then
            local sessionData = playerIdFolder:FindFirstChild("SessionData")
            if sessionData then
                local blocking = sessionData:FindFirstChild("Blocking")
                if blocking and blocking.Value == true then
                    local args = {
                        [1] = "Block"
                    }
                    ReplicatedStorage.Remotes.Hitbox["Events/Functions"].Event:FireServer(unpack(args))
                    print("Blocking event fired for player:", trackedPlayer.Name)
                else
                    print("Player is not blocking:", trackedPlayer.Name)
                end
            else
                print("SessionData not found for player:", trackedPlayer.Name)
            end
        else
            print("PlayerIdFolder not found for player:", trackedPlayer.Name)
        end
    end
end

-- Run the tracking and check periodically
RunService.Heartbeat:Connect(function()
    if running then
        checkAndFireEvent()
    end
end)
