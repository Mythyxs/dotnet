local player = game.Players.LocalPlayer
local userInputService = game:GetService("UserInputService")

-- This function finds or creates a toggle flag under the player
local function findOrCreateToggleFlag()
    local flag = player:FindFirstChild("SpeedToggleFlag")
    if not flag then
        flag = Instance.new("BoolValue")
        flag.Name = "SpeedToggleFlag"
        flag.Parent = player
        flag.Value = false -- Default to false, indicating speed adjustment is initially disabled
    end
    return flag
end

local toggleFlag = findOrCreateToggleFlag()

-- Variable to prevent re-entry loop
local adjustingSpeed = false

-- This function adjusts the humanoid's walk speed based on the toggle flag's value
local function adjustSpeed(humanoid)
    if adjustingSpeed then
        return
    end

    adjustingSpeed = true
    if toggleFlag.Value then
        humanoid.WalkSpeed = 25  -- Enhanced speed when enabled
    else
        humanoid.WalkSpeed = 25  -- Normal speed when disabled
    end
    adjustingSpeed = false
end

-- Handles the character being added to the game, setting up initial conditions
local function onCharacterAdded(character)
    local humanoid = character:WaitForChild("Humanoid")
    adjustSpeed(humanoid) -- Apply initial speed setting based on current flag state

    -- Keep adjusting the speed when it changes externally
    humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
        if not adjustingSpeed then
            adjustSpeed(humanoid)
        end
    end)
end

-- Connecting the character added signal to handle respawns
player.CharacterAdded:Connect(onCharacterAdded)

-- Listening for the RB button on the Xbox controller to toggle the speed adjustment
userInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if input.KeyCode == Enum.KeyCode.DPadLeft and not gameProcessedEvent then
        toggleFlag.Value = not toggleFlag.Value -- Toggle the state
        if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
            adjustSpeed(player.Character.Humanoid) -- Immediately apply the new speed setting
        end
    end
end)

-- Ensure we handle the current character if it already exists
if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
    onCharacterAdded(player.Character)
end
