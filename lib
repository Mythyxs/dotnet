local UILibrary = {}

-- Function to create a simple button
function UILibrary:CreateButton(parent, text, position, size, callback)
    local button = Instance.new("TextButton")
    button.Text = text
    button.Size = size or UDim2.new(0, 100, 0, 50)
    button.Position = position or UDim2.new(0, 0, 0, 0)
    button.Parent = parent
    button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.MouseButton1Click:Connect(callback)

    return button
end

-- Function to create a toggle switch
function UILibrary:CreateToggle(parent, position, size, callback)
    local toggle = Instance.new("Frame")
    toggle.Size = size or UDim2.new(0, 50, 0, 25)
    toggle.Position = position or UDim2.new(0, 0, 0, 0)
    toggle.Parent = parent
    toggle.BackgroundColor3 = Color3.fromRGB(100, 100, 100)

    local switch = Instance.new("Frame")
    switch.Size = UDim2.new(0.5, 0, 1, 0)
    switch.Position = UDim2.new(0, 0, 0, 0)
    switch.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    switch.Parent = toggle

    local isOn = false
    toggle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isOn = not isOn
            switch.Position = isOn and UDim2.new(0.5, 0, 0, 0) or UDim2.new(0, 0, 0, 0)
            switch.BackgroundColor3 = isOn and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
            if callback then callback(isOn) end
        end
    end)

    return toggle
end

-- Function to create a slider
function UILibrary:CreateSlider(parent, min, max, default, position, size, callback)
    local slider = Instance.new("Frame")
    slider.Size = size or UDim2.new(0, 200, 0, 20)
    slider.Position = position or UDim2.new(0, 0, 0, 0)
    slider.Parent = parent
    slider.BackgroundColor3 = Color3.fromRGB(50, 50, 50)

    local knob = Instance.new("Frame")
    knob.Size = UDim2.new(0, 10, 1, 0)
    knob.Position = UDim2.new((default - min) / (max - min), 0, 0, 0)
    knob.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    knob.Parent = slider

    local value = default
    local dragging = false

    knob.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)

    knob.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    slider.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local relativePos = math.clamp((input.Position.X - slider.AbsolutePosition.X) / slider.AbsoluteSize.X, 0, 1)
            knob.Position = UDim2.new(relativePos, 0, 0, 0)
            value = math.floor(min + relativePos * (max - min))
            if callback then callback(value) end
        end
    end)

    return slider
end

return UILibrary
